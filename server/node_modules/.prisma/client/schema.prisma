generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_url")
}

model Booking {
  id              Int           @id @default(autoincrement())
  pcDate          DateTime      @map("pc_date")
  issuedDate      DateTime?     @map("issued_date")
  refNo           String        @unique @map("ref_no")
  pnr             String?       @unique
  paxName         String        @map("pax_name")
  agentName       String        @map("agent_name")
  teamName        String        @map("team_name")
  revenue         Float
  productCost     Float         @map("prod_cost")
  transactionFee  Float         @map("trans_fee")
  surcharge       Float
  received        Float         @map("received_amount")
  balance         Float         @map("bal_amount")
  profit          Float         @default(0)
  invoiced        Float
  lastPaymentDate DateTime?     @map("lastpay_date")
  status          BookingStatus
  createdAt       DateTime      @default(now()) @map("created_at")

  bookingType   BookingType   @map("booking_type")
  paymentMethod PaymentMethod @map("payment_method")
  airline       String?       @db.VarChar(25)
  paxType       PaxType       @map("pax_type")
  routeFrom     String        @map("route_from")
  routeTo       String        @map("route_to")

  @@map("bookings")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  title     String?  @db.VarChar(10)
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  contactNo String?  @map("contact_no")
  role      Role
  createdAt DateTime @default(now()) @map("created_at")

  @@map("users")
}

enum Role {
  ADMIN
  MANAGER
  AGENT
}

enum BookingType {
  FRESH
  DATE_CHANGE
  CANCELLATION
}

enum PaxType {
  FRESH
  REFERRAL
  REPEAT
}

enum PaymentMethod {
  FULL
  INTERNAL
  REFUND
  HUMM
  FULL_HUMM
  INTERNAL_HUMM
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
}
